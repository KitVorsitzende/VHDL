library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

ENTITY Bandpass IS
  GERNERIC(
  input_width:integer:=14;
  output_width:integer:=14;
  tap:=integer:=3
  );
  
PORT(
  clk:IN STD_LOGIC;
  rst:IN STD_LOGIC;
  x_input:IN STD_LOGIC_VECTOR(input_width-1 downto 0);
  y_input:IN STD_LOGIC_VECTOR(output_width-1 downto 0)
  );
END Bandpass;
ARCHITECTURE BEHAVIOR OF Bandpass is

COMPONENT 14_bit_DFF
  GENERIC(
  signal_width:integer:=14
  );
PORT(
  clk:IN STD_LOGIC;
  rst:IN STD_LOGIC;
  signal_input:IN STD_LOGIC_VECTOR(signal_width-1 downto 0);
  signal_output:OUT STD_LOGIC_VECTOR(signal_width-1 downto 0);
);
END COMPONENT; 
CONSTANT a0:SIGNED(2 downto 0):=110;  --(-0,5)
CONSTANT a1:SIGNED(2 downto 0):=000;  --0 
CONSTANT a2:SIGNED(2 downto 0):=010;  --0,5
SIGNAL S1,S2,S3:SIGNED(output_width-1 downto 0):=(others=>'0');
SIGNAL M1,M2,M3:SIGNED(output_width-1 downto 0):=(others=>'0');
SIGNAL D1,D2,D3:SIGNED(output_width-1 downto 0):=(others=>'0');
BEGIN
dff1: 14_bit_DFF port map(clk,x_input,D1);
dff2: 14_bit_DFF port map(clk,D1,D2);

M1<=x_input*a0;
M2<=D1*a1;
M3<=D2*a2;

S1<=M1+M2;
S2<=S1+M3;

PROCESS(clk)
BEGIN
  IF(rising_edge(clk)) THEN
    y_output<=S2;
  END IF;
END PROCESS;

END BEHAVIOR